# This file loads first alphabetically and becomes the default server for non-matching hosts
# because it has no server_name and no other server has default_server

server {
    listen 80;
    # DO NOT add server_name directive here - we want this to catch non-matching hostnames
    
    # Add debug headers
    # add_header X-Debug-Info "This is the secret 20-prize.conf server";
    add_header X-File-Order "File loads first alphabetically";
    add_header X-Server-Type "Default by alphabetical position (first server)";
    
    # Add endpoints for the snake game
    location /snake {
        default_type text/html;
        content_by_lua_file /usr/local/openresty/nginx/lua/secret_snake.lua;
    }
    
    location /snake/state {
        default_type application/json;
        content_by_lua_file /usr/local/openresty/nginx/lua/snake_state.lua;
    }
    
    location /snake/move {
        default_type application/json;
        content_by_lua_file /usr/local/openresty/nginx/lua/snake_move.lua;
    }
    
    location /snake/restart {
        default_type application/json;
        content_by_lua_file /usr/local/openresty/nginx/lua/snake_restart.lua;
    }
    
    # Regular paths return nothing interesting
    location / {
        default_type text/plain;
        return 404 "This is the secret server - try exploring the /snake and /flag-piece paths";
    }
    
    # Special HTTP methods reveal parts of the flag
    location = /flag-piece {
        if ($request_method = "OPTIONS") {
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header X-Flag-Part-1 "OZONCTF{nginx_";
            add_header Access-Control-Allow-Origin "*";
            return 204;
        }
        
        if ($request_method = "HEAD") {
            add_header X-Flag-Part-3 "alphabetical}";
            return 204;
        }
        
        return 404 "Method not allowed - try different HTTP methods";
    }
}
